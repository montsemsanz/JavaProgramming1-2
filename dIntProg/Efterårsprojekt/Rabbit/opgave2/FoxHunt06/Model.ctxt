#BlueJ class context
comment0.params=width\ height
comment0.target=Model(int,\ int)
comment0.text=\nConstructs\ a\ model\ that\ uses\ a\ field\ of\ the\ given\ size.\n\n@param\ width\ The\ width\ of\ the\ field\ to\ be\ used\ by\ the\ model.\n@param\ height\ The\ height\ of\ the\ field\ to\ be\ used\ by\ the\ model.\n\n
comment1.params=width\ height\ numofhounds\ numofbush
comment1.target=Model(int,\ int,\ int,\ int)
comment1.text=\nConstructs\ a\ model\ that\ uses\ a\ field\ of\ the\ given\ size.\n\n@param\ width\ The\ width\ of\ the\ field\ to\ be\ used\ by\ the\ model.\n@param\ height\ The\ height\ of\ the\ field\ to\ be\ used\ by\ the\ model.\n@param\ numofhounds\ The\ number\ of\ hounds\ (always\ 0<)\ to\ hunt\ the\ fox.\n@param\ numofbush\ The\ number\ of\ bushes\ on\ the\ field\ (interpreted\ as\ %).\n\n
comment10.params=min\ max
comment10.target=int\ random(int,\ int)
comment10.text=\nUtility\ method\ to\ choose\ a\ random\ integer\ from\ min\nto\ max,\ inclusive.\n\n@param\ min\ the\ smallest\ number\ to\ be\ returned\n@param\ max\ the\ largest\ number\ to\ be\ returned\n@return\ a\ random\ number\ N,\ where\ min\ &lt;\=\ N\ &lt;\=\ max\n\n
comment11.params=row\ column
comment11.target=boolean\ legalLocation(int,\ int)
comment11.text=\nDetermines\ whether\ the\ given\ row\ and\ column\ numbers\ represent\na\ legal\ location\ in\ the\ field.\n\n@param\ row\ \ \ \ the\ row\ number\n@param\ column\ the\ column\ number\n\n
comment12.params=animal\ direction
comment12.target=Observation\ look(Animal,\ Direction)
comment12.text=\nDetermines\ what\ can\ be\ seen\ from\ a\ given\ location,\ looking\nin\ a\ given\ direction.\n\n@param\ animal\ the\ animal\ making\ the\ look\n@param\ direction\ \ the\ direction\ of\ the\ look\n@return\ the\ object\ seen\n\n
comment13.params=direction
comment13.target=int\ rowChange(Direction)
comment13.text=\nDetermines\ how\ moving\ in\ the\ given\ direction\ affects\ the\nrow\ number.\n\n@param\ direction\ the\ direction\ in\ which\ to\ move\n@return\ the\ amount\ by\ which\ the\ row\ number\ will\ change\n\n
comment14.params=direction
comment14.target=int\ columnChange(Direction)
comment14.text=\nDetermines\ how\ moving\ in\ the\ given\ direction\ affects\ the\ncolumn\ number.\n\n@param\ direction\ \ the\ direction\ in\ which\ to\ move\n@return\ the\ amount\ by\ which\ the\ column\ number\ will\ change\n\n
comment15.target=boolean\ isFoxsTurn()
comment15.text=Is\ it\ the\ fox's\ turn?\n@return\ true\ if\ it\ is\ the\ fox's\ turn,\ false\ otherwise\n\n
comment2.target=Grid<Piece>\ getField()
comment2.text=\nReturns\ the\ field.\n@return\ the\ field\n\n
comment3.target=void\ replay()
comment3.text=\nSets\ replay\ mode\ and\ rewinds\ to\ turn\ 0.\ The\ game\ that\ starts\nthere\ is\ exactly\ the\ same\ as\ before.\n\n
comment4.target=void\ reset()
comment4.text=\nReset\ the\ game.\n\n
comment5.params=replay
comment5.target=void\ populate(boolean)
comment5.text=\nPuts\ some\ hounds,\ a\ fox,\ and\ some\ bushes\ in\ the\ field.\n\n
comment6.target=void\ allowSingleMove()
comment6.text=\nGives\ one\ animal\ a\ chance\ to\ move.\n\n
comment7.target=void\ allowMoves()
comment7.text=\nGives\ the\ fox\ a\ chance\ to\ move,\ then\ gives\ the\ hounds\na\ chance\ to\ move.\n\n
comment8.target=int\ stepsTaken()
comment8.text=\nReturns\ the\ number\ of\ steps\ taken\ so\ far.\n@return\ the\ number\ of\ steps\ taken\n\n
comment9.target=boolean\ gameIsOver()
comment9.text=\nIs\ the\ game\ over?\n@return\ true\ if\ the\ game\ is\ over,\ otherwise\ false\n\n
numComments=16
